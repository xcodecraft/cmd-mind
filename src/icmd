#!/usr/bin/python
import sys,xenv,os.path
import logging
import pdb

def exec_mode(cur_mode,line,receiver) :
    for c in line :
        cur_mode = cur_mode.mode(c)
        if cur_mode is not end_mode :
            cur_mode.input(c,receiver)

if __name__ == '__main__':
    xenv.set_modul_path()
    logging.basicConfig(level=logging.DEBUG,filename='run.log')
    argv = sys.argv

    conf = os.environ['ICMD_CONF']
    mcmd = os.environ['ICMD_MAIN']
    cmd_line = ""
    for word in argv[1:] :
       cmd_line = cmd_line + " " + word

    import xcmd , define,error
    import impl.console , impl.cmd_parser, impl.conf_iter ,impl.conf_yaml
    curpath = os.path.dirname(os.path.realpath(__file__))
    version = open(curpath  + "/version.txt").readline()
    
    print("Welcome use XCodeCraft cmd-mind! Use 'quit' Exit!")
    print("version:%s" %version)
    try:
        data     = impl.conf_yaml.load_conf(conf,"!","define.")
        cmder    = xcmd.commander(mcmd,cmd_line)
        iter     = impl.conf_iter.node_iter(data)
        while True :
            if not iter.match(cmder) :
                impl.console.complement(cmder,iter)
            if len(cmder.cmds) > 0  and cmder.cmds[0] == 'quit' :
                print("\nBye!\n")
                break
            if iter.match(cmder) :
                cmder.do(iter)
                cmder.clear()
                print('\n--------------done! ------------------')
            else:
                print("\nerror cmd!")
                print('----------------help------------------')
                cmder.help(iter)
    except error.icmd_exception as e:
        print("")
        print(e)
